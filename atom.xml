<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Chen的博客</title>
  
  <subtitle>Pain is inevitable. Suffering is optional. 痛苦不可避免，但可以选择是否受苦。</subtitle>
  <link href="/cl1169451697.github.io/atom.xml" rel="self"/>
  
  <link href="https://github.com/cl1169451697/cl1169451697.github.io/"/>
  <updated>2020-07-17T14:40:51.157Z</updated>
  <id>https://github.com/cl1169451697/cl1169451697.github.io/</id>
  
  <author>
    <name>CL</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mock</title>
    <link href="https://github.com/cl1169451697/cl1169451697.github.io/2020/07/17/mock/"/>
    <id>https://github.com/cl1169451697/cl1169451697.github.io/2020/07/17/mock/</id>
    <published>2020-07-17T12:39:34.000Z</published>
    <updated>2020-07-17T14:40:51.157Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\cl1169451697.github.io\assets\css\APlayer.min.css"><script src="\cl1169451697.github.io\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ol><li><p>先安装 mock.js<br>npm install mockjs –save-dev</p></li><li><p>模拟数据接口<br>在项目的<code>src</code>目录下创建一个<code>mock</code>目录，然后在里面新建一个<code>index.js</code>文件，作为mock的导出点，用于提供给<code>src/main.js</code>使用。<br>在<code>src/mock</code>下新建<code>modules</code>目录，里面再新建各种<code>xxx.js</code>，用来模拟各个页面的数据。</p></li><li><p>src目录结构图:<br><a href="https://img2020.cnblogs.com/blog/1977091/202007/1977091-20200717222205078-2072351280.png" target="_blank" rel="noopener"><img src="https://img2020.cnblogs.com/blog/1977091/202007/1977091-20200717222205591-884731908.png" alt="image"></a></p></li><li><p>index.js代码:</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 引入mockjs</span><br><span class="line">import Mock from &#39;mockjs&#39;</span><br><span class="line">&#x2F;&#x2F; 引入模板函数类</span><br><span class="line">import ratings from &#39;.&#x2F;modules&#x2F;ratings&#39;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; Mock函数</span><br><span class="line">const &#123; mock &#125; &#x3D; Mock</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 设置延时</span><br><span class="line">Mock.setup(&#123;</span><br><span class="line">  timeout: 400</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 使用拦截规则拦截命中的请求，mock(url, post&#x2F;get, 返回的数据);</span><br><span class="line">mock(&#x2F;\&#x2F;api\&#x2F;ratings\&#x2F;list&#x2F;, &#39;post&#39;, ratings.list)</span><br><span class="line">&#x2F;&#x2F; mock(&#x2F;\&#x2F;api\&#x2F;ratings\&#x2F;list&#x2F;, &#39;get&#39;, ratings.list)</span><br></pre></td></tr></table></figure><ol start="5"><li>ratings.js代码:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 引入随机函数</span><br><span class="line">import &#123; Random &#125; from &#39;mockjs&#39;</span><br><span class="line">&#x2F;&#x2F; 引入Mock</span><br><span class="line">const Mock &#x3D; require(&#39;mockjs&#39;)</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 定义数据</span><br><span class="line">const listData &#x3D; Mock.mock(&#123;</span><br><span class="line">  &#39;data|20&#39;: [&#123;</span><br><span class="line">    username: () &#x3D;&gt; Random.cname(),</span><br><span class="line">    time: () &#x3D;&gt; Random.date(&#39;yyyy.M.d&#39;),</span><br><span class="line">    content: () &#x3D;&gt; Random.csentence(5, 10)</span><br><span class="line">  &#125;]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">function list (res) &#123;</span><br><span class="line">  &#x2F;&#x2F; res是一个请求对象，包含: url, type, body</span><br><span class="line">  return &#123;</span><br><span class="line">    code: 200,</span><br><span class="line">    data: listData.data,</span><br><span class="line">    message: &#39;请求成功&#39;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default &#123; list &#125;</span><br></pre></td></tr></table></figure></li></ol><ol start="6"><li><p>mockjs使用Random方法生成随机数据的规则 <a href="https://github.com/nuysoft/Mock/wiki/Mock.Random">官方文档</a></p></li><li><p>main.js中引入模拟数据接口:<br>在 src/main.js 中需要加入以下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import &#39;@&#x2F;mock&#39;</span><br></pre></td></tr></table></figure></li><li><p>安装axios  npm install axios</p></li><li><p>main.js中引入axios</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import axios from &#39;axios&#39;</span><br><span class="line">&#x2F;&#x2F; 配置axios 到原型中</span><br><span class="line">Vue.prototype.$axios &#x3D; axios</span><br></pre></td></tr></table></figure></li><li><p>main.js完整代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &#39;vue&#39;</span><br><span class="line">import App from &#39;.&#x2F;App.vue&#39;</span><br><span class="line">import router from &#39;.&#x2F;router&#39;</span><br><span class="line">import store from &#39;.&#x2F;store&#39;</span><br><span class="line">import axios from &#39;axios&#39;</span><br><span class="line">import &#39;@&#x2F;mock&#39;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Vue.prototype.$axios &#x3D; axios</span><br><span class="line">Vue.config.productionTip &#x3D; false</span><br><span class="line"></span><br><span class="line">new Vue(&#123;</span><br><span class="line">  router,</span><br><span class="line">  store,</span><br><span class="line">  render: h &#x3D;&gt; h(App)</span><br><span class="line">&#125;).$mount(&#39;#app&#39;)</span><br></pre></td></tr></table></figure></li></ol><ol start="11"><li><p>页面使用:<br><a href="https://img2020.cnblogs.com/blog/1977091/202007/1977091-20200717223419796-1548627817.png" target="_blank" rel="noopener"><img src="https://img2020.cnblogs.com/blog/1977091/202007/1977091-20200717223420249-885165101.png" alt="image"></a></p></li><li><p>打印数据:<br><a href="https://img2020.cnblogs.com/blog/1977091/202007/1977091-20200717223420671-983537329.png" target="_blank" rel="noopener"><img src="https://img2020.cnblogs.com/blog/1977091/202007/1977091-20200717223420966-244168936.png" alt="image"></a></p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\cl1169451697.github.io\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\cl1169
      
    
    </summary>
    
    
      <category term="学习" scheme="https://github.com/cl1169451697/cl1169451697.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="mock" scheme="https://github.com/cl1169451697/cl1169451697.github.io/tags/mock/"/>
    
  </entry>
  
  <entry>
    <title>computed 和 watch</title>
    <link href="https://github.com/cl1169451697/cl1169451697.github.io/2020/07/15/%E5%88%9D%E6%AC%A1/"/>
    <id>https://github.com/cl1169451697/cl1169451697.github.io/2020/07/15/%E5%88%9D%E6%AC%A1/</id>
    <published>2020-07-15T13:52:57.000Z</published>
    <updated>2020-07-16T03:53:00.791Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\cl1169451697.github.io\assets\css\APlayer.min.css"><script src="\cl1169451697.github.io\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="computed"><a href="#computed" class="headerlink" title="computed:"></a>computed:</h3><p>计算属性，依赖其它属性值，并且 computed 的值有缓存，只有它依赖的属性值发生改变，下一次获取 computed 的值时才会重新计算 computed 的值；</p><h3 id="watch"><a href="#watch" class="headerlink" title="watch:"></a>watch:</h3><p>监听器:更多的是「观察」的作用，类似于某些数据的监听回调 ，每当监听的数据变化时都会执行回调进行后续操作；</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\cl1169451697.github.io\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\cl1169
      
    
    </summary>
    
    
      <category term="学习" scheme="https://github.com/cl1169451697/cl1169451697.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="computed | watch" scheme="https://github.com/cl1169451697/cl1169451697.github.io/tags/computed-watch/"/>
    
  </entry>
  
  <entry>
    <title>hexo基本配置</title>
    <link href="https://github.com/cl1169451697/cl1169451697.github.io/2020/07/14/%E6%89%93%E5%BC%80/"/>
    <id>https://github.com/cl1169451697/cl1169451697.github.io/2020/07/14/%E6%89%93%E5%BC%80/</id>
    <published>2020-07-14T15:31:25.000Z</published>
    <updated>2020-07-16T03:44:43.432Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\cl1169451697.github.io\assets\css\APlayer.min.css"><script src="\cl1169451697.github.io\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="hexo文档"><a href="#hexo文档" class="headerlink" title="hexo文档"></a>hexo文档</h2><p><a href="https://hexo.bootcss.com/docs/" target="_blank" rel="noopener">https://hexo.bootcss.com/docs/</a> </p><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo:"></a>安装hexo:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化:"></a>初始化:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><h2 id="启动"><a href="#启动" class="headerlink" title="启动:"></a>启动:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><h2 id="生成文件"><a href="#生成文件" class="headerlink" title="生成文件"></a>生成文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><h2 id="更新仓库"><a href="#更新仓库" class="headerlink" title="更新仓库"></a>更新仓库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><h2 id="清除缓存"><a href="#清除缓存" class="headerlink" title="清除缓存:"></a>清除缓存:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><h2 id="关联git"><a href="#关联git" class="headerlink" title="关联git:"></a>关联git:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure><h2 id="配置config文件"><a href="#配置config文件" class="headerlink" title="配置config文件:"></a>配置config文件:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">type: git</span><br><span class="line">repo: https:&#x2F;&#x2F;gitee.com&#x2F;cl1169451697&#x2F;chenlong.git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure><h2 id="配置-config文件"><a href="#配置-config文件" class="headerlink" title="配置_config文件"></a>配置_config文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root: chenlong.git</span><br><span class="line">url: https:&#x2F;&#x2F;gitee.com&#x2F;cl1169451697&#x2F;chenlong.git</span><br></pre></td></tr></table></figure><h2 id="常用博客样式"><a href="#常用博客样式" class="headerlink" title="常用博客样式:"></a>常用博客样式:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;litten&#x2F;hexo-theme-yilia</span><br><span class="line">git clone https:&#x2F;&#x2F;gitee.com&#x2F;cl1169451697&#x2F;hexo-theme-BlueLake.git themes&#x2F;yilia</span><br></pre></td></tr></table></figure><h2 id="修改-config-yml"><a href="#修改-config-yml" class="headerlink" title="修改_config.yml:"></a>修改_config.yml:</h2><p>themes: 设置为下载的主题名字</p><h2 id="创建笔记"><a href="#创建笔记" class="headerlink" title="创建笔记"></a>创建笔记</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;记录&quot;</span><br></pre></td></tr></table></figure><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: BlueLake博客主题的详细配置</span><br><span class="line">tags: [hexo,BlueLake] &#x2F;&#x2F; 标签</span><br><span class="line">categories: Hexo博客折腾  &#x2F;&#x2F; 分类</span><br><span class="line">top: true &#x2F;&#x2F; 置顶</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\cl1169451697.github.io\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\cl1169
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://github.com/cl1169451697/cl1169451697.github.io/2020/07/14/hello-world/"/>
    <id>https://github.com/cl1169451697/cl1169451697.github.io/2020/07/14/hello-world/</id>
    <published>2020-07-14T12:08:21.546Z</published>
    <updated>2020-07-14T12:08:21.546Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
